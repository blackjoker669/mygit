一个.java文件被编译成.class字节码文件，通过类加载器将.class文件读进内存中的运行时数据区
JMM:java memory model
运行时数据区：
	1.分为线程私有区域和线程共享区域
	
	2.线程私有区域分为: 
		1.Native Method Area 本地方法栈 ：主要为虚拟机使用的native方法服务。
		
		2.JVM Stack 虚拟机栈：每个方法在虚拟机栈中都对应一个栈帧（Stack Frame），每个栈帧分为四个部分：
			1. Local Variable Table 局部变量表
				*存放方法参数和方法内定义的局部变量
				*包含八种基本数据类型、对象引用和returnAddress类型(指向一条字节码指令的地址)
				*其中64位长度的long和double类型的数据占据两个局部变量表空间(slot），其余只占用一个
				
			2. Operand  Stack 操作数栈
				*会从局部变量表或对象实例的字段中复制常量或变量写入操作数栈中，对栈中元素进行运算将结果出栈到局部变量表或返回给方法调用者。
			
			3. Dynamic Linking 动态链接
				*每个栈帧都包含一个指向运行时常量池中该栈帧所属方法的符号引用，持有这个符号引用的目的是为了支持方法调用过程中的动态连接，即多态
			
			4. Return Address 方法返回地址
				*无论方法是否正常完成，都需要返回到方法被调用的位置，程序才能继续进行。
		
		3.Program Counter Register 程序计数器：用于记录线程执行的进度，在线程切换时保证线程的正确执行。如果执行的是Native方法，则计数器的值为空(undifined)
		
	3.线程共享区域:
		1.Method Area 方法区，也称为永生代（jkd7之前）或者元数据空间（jkd8之后）
			1.类信息
			2.运行时常量池，存放方法的符号引用
			3.静态变量
			4.JIT编译后的代码(汇编)
				JIT:将一些热点代码直接编译成汇编语言，再次使用时不需要重新解释，直接调用即可。
			
		2.Heap 堆 ：绝大多数对象都存放在堆中，堆也是进行GC的主要区域,分为new新生代和old老年代
			new新生代：
				1.Eden 
				2.From Survivor 也称Survivor0
				3.To Survivor 也称Survivor1
			old老年代：
				4.Tenured
			
		Eden区、SO区、S1区的内存比例大小是8:1:1 ，该值是经过经验总结得出，此比例的回收效率最高。
		new 和 old 内存比例是1:3