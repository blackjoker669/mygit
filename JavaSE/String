String常用的方法：
1.length
2.equals
3.trim ：去掉字符串前面和后面的空格
4.substring
5.concat ： 拼接字符串
6.indexOf 
7.lastIndexOf
8.replace
9.split
10.toLowerCase
11.toUpperCase
12.startsWith
13.endsWith
14.hashCode
15.equalsIgnoreCase
16.compareTo
如何判断一个字符串中某个字符出现的次数
1.先把字符串转换为字符数组，使用foreach循环，if判断：
	String str = "AnvdaizxnfibafsdasBAVASDsdasd";
	char target = 'a';
	char[] strChar = str.toCharArray();
	
	int count = 0;
	for (char c : strChar) {
		if (c == target) {
			count ++;
		}
	}
	System.out.println("字符a出现的次数为:"+count+"次");

2.使用replace将目标字符替换为空字符得出一个新字符串，比较两个字符串length的差值：
	String str = "AnvdaizxnfibafsdasBAVASDsdasd";
	int origialLenth = str.length();
	String target = "a";
	str = str.replace(target, "");
	int newLength = str.length();
	int num = origialLenth - newLength ;
	System.out.println(num);	

如何反转一个字符串：
1.使用StringBuilder的方法reverse()
	String str = "Abcsadewwa";
	StringBuilder stringBuilder = new StringBuilder(str);
	StringBuilder reverse = stringBuilder.reverse();
	System.out.println(reverse);
	
2.利用数据结构中的栈，其特点是先进先出，把字符串每个字符按顺序入栈，再依次出栈，即可实现反转

	String str = "Abcsadewwa";
	char[] charArray = str.toCharArray();
	Stack<Character> stack = new Stack<>();
	StringBuilder newStr = new StringBuilder();
	for(char c : charArray) {
		stack.push(c);
	}
	for(int i = 0; i<charArray.length; i++) {
		newStr.append(stack.pop()) ;
	}
	System.out.println("反转前:"+str);
	System.out.println("反转后:"+newStr);



























