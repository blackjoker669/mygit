
	 * @Transactional:
	 * 1.当注解标注方法时，该方法将被事务管理器进行事务管理
	 * 2.当注解标注类时，该类的所有方法将被事务管理器进行事务管理
	 * 3.当类和方法注解都添加了相同属性时，按就近原则使用方法上的注解属性
	 * 4.当类和方法注解添加了不同注解时，两种属性不发生冲突，都有作用
	 * 属性名：
	 * 1.propagation:事务的传播级别
	 * 		*Propagation.REQUIRED：如果当前有事务，则执行在当前事务；如果没有，则启动一个新的事务来执行。（默认值）
	 * 		*Propagation.REQUIRES_NEW: 当前方法必须启动新的事务来执行，如果存在事务则将其挂起。
	 * 		*Propagation.SUPPORTS：如果有事务，则必须在事务中运行；如果没有，则可以不运行在事务中。
	 * 2.isolation:事务隔离级别，在并发的情况下操作数据的一种规定
	 * 		*1.读未提交:脏读，指当一个事务正在访问数据，并且对数据进行了修改，而这种修改还没有提交到数据库中，这时，
	 * 另外一个事务也访问这个数据，然后使用了这个数据。因为这个数据是还没有提交的数据， 那么另外一 个事务读到的
	 * 这个数据是脏数据，依据脏数据所做的操作可能是不正确的。值为 1
	 * 		*2.读已提交:不可重复读,指在一个事务内，多次读同一数据。在这个事务还没有结束时，另外一个事务也访问该同一数据。
	 *  那么，在第一个事务中的两次读数据之间，由于第二个事务的修改，那么第一个事务两次读到的数据可能是不一样的。这样
	 *  就发生了在一个事务内两次读到的数据是不一样的，因此称为是不可重复读。值为 2
	 * 		*3.可重复读:幻影读，指当事务不是独立执行时发生的一种现象，例如第一个事务对一个表中的数据进行了修改，这种修改
	 * 涉及 到表中的全部数据行。同时，第二个事务也修改这个表中的数据，这种修改是向表中插入一行新数据。那么，就会发生
	 * 操作第一个事务的用户发现表中还有 没有修改的数据行,也就是说幻像读是指同一查询在同一事务中多次进行，由于其他提交
	 * 事务所做的插入操作，每次返回不同的结果集，此时发生幻像读,就好象发生了幻觉一样。值为 4
	 * 		*4.串行化：当前读取的数据不允许其他事务访问（加锁），性能低消耗大，值为 8
	 * 3.timeout:	超时时间，在事务强制回滚前可以等待的最长时间，timeout=3(秒)
	 * 4.readOnly:只读，指定当前事务的操作是否为只读(告诉持久化层不需要加锁操作)
	 * 		*如果当前事务中只有读操作，当设置readOnly=true时，会告诉持久化层(mysql)不需要进行加锁操作
	 * 		*如果当前事务有写操作，当设置readOnly=true时，该写操作可能引发脏读、不可重复读、幻影读，所以此时应该设置为false。
	 * 5.rollbackFor(异常类名.class)\rollbackForClassName:当指定异常发生时，回滚事务
	 * 6.noRollbackFor\noRollbackForClassName:当指定异常发生时，事务不回滚
