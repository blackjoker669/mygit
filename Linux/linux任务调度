crond任务调度
	原理: 定时调度提前设置好的脚本或代码
	分类：
		1.系统工作：有些重要的工作必须周而复始的执行。如病毒扫描等。
		2.用户工作：用户希望执行某些程序，比如对数据库的备份。
		
	基本语法：
		crontab [选项]
	常用选项：
		-e : 编辑crontab定时任务
		-l : 查询crontab任务
		-r : 删除当前用户所有的crontab任务
		
	设置任务：
		1.设置个人任务调度：crontab -e 
		2.输入任务到调度文件: */1 * * * * ls -1 /etc/>/tmp/to.txt
		即：	每小时的每分钟执行ls -l /etc/ > /tmp/to.txt 命令
		
	例：
		1.每隔1分钟，向/tmp/dog.txt中写一句"汪汪！":
			crontab -e 
			1/* * * * * echo "汪汪!" >> /tmp/dog.txt
			
		2.每隔一分钟，将当前日期和日历追加到/home/mytime文件中
			1.先编写一个文件: 
				vim /home/mytask.sh 
				date >> /home/mytime
				cal >> /home/mytime
			2.给mytask.sh添加可执行权限：
				chmod 766 /home/mytask.sh
			3.设置任务:
				crontab -e 
				*/1 * * * * /home/mytask.sh
				
		3.每天凌晨两点整将mysql数据库testdb,备份到文件mydb.bak中			
			1.先编写一个文件 : 
				vim /home/mytask2.sh
				/usr/local/mysql/bin/mysqldump -uroot -proot testdb > /tmp/mydb.bak
			2.设置可执行权限:
				chmod 766 /home/mytask2.sh
			3.设置任务:
				crontab -e
				0 2 * * * /home/mytask2.sh
		
				
	占位符*:
	1.第一个*代表 ： 一小时中的第几分钟，即0-59
	2.第二个*代表 ： 一天当中的第几小时，即0-23
	3.第三个*代表 ： 一个月当中的第几天，即1-31
	4.第四个*代表 ： 一年当中的第几月，即1-12
	5.第五个*代表 ： 一周当中的星期几，即0-7 （0和7都代表星期天）
	
	特殊符号：
	,   :代表不连续的时间。 如" 0 8 ,12 ,16 * * *" 表示在每天的8点0分，12点0分，16点0分执行一次命令
	-   :代表连续的时间范围。 如"0 5 * * 1-6" 表示在周一到周六的凌晨5点0分执行一次命令
	*/n :代表每隔多久执行一次。如"*/10 * * * *" 表示每隔10分钟执行一次命令
	
	特定时间执行任务案例：
	45 22 * * *  ： 在每天的22点25分执行命令
	0  17 * * 1  ： 每周1的17点0分执行命令
	0 5 1,15 * * ： 每月1日和15日的5点0分执行命令
	40 4 * * 1-5 ： 每周1到周五的4点40分执行命令
	*/10 4 * * * ： 每天的4点(60分钟内)，每隔10分钟执行一次命令
	0 0 1,15 * 1 ： 每月1日和15日，每周1的0点0分执行命令。 （最好不要使星期几和每月第几天同时出现，容易混乱）
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	总有人喜欢通过贬低别人来缓解自己内心的恐慌与嫉妒